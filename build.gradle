import java.util.stream.Stream

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
}
java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation project(":AccountInterface")
    implementation 'com.github.MilkBowl:VaultAPI:1.7.1'
    implementation 'com.github.mosemister:BukkitCommandSystem:1.2.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testImplementation "org.mockito:mockito-core:5.8.0"
    compileOnly "org.jetbrains:annotations:24.0.0"
    implementation "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
}

group = 'org.kaiaccount'
version = '0.0.1-pre'
description = 'eco_tools'

sourceSets {
    main {
        java {

        }
    }
}

jar {
    var include = new String[]{"BukkitCommandSystem-"}

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.compileClasspath.collect {
            if (it.isDirectory()) {
                return it;
            }
            var name = it.getName();
            if (Stream.of(include).anyMatch(t -> name.startsWith(t))) {
                return zipTree(it)
            }
            return null;
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
